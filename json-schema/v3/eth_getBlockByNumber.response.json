{
    "$schema": "http://json-schema.org/draft-06/schema#",

    "title": "eth_getBlockByNumber response",
    "description": "Returns information about a block by block number.",

    "type": "object",
    "additionalProperties": false,
    "required": [
        "number", "hash", "parentHash", "nonce", "logsBloom", "transactionsRoot", "stateRoot", "receiptsRoot", "miner", "difficulty", "totalDifficulty", "extraData", "size", "nrgLimit", "nrgUsed", "gasLimit", "gasUsed", "timestamp", "transactions", "solution" 
    ],
    "properties": {
        "number": {
            "$ref": "type.json#/definitions/QUANTITY",
            "description": "the block number. null when it is pending block."
        },
        "hash": {
            "$ref": "type.json#/definitions/DATA32",
            "description": "hash of the block. null when it is pending block."
        },
        "parentHash": {
            "$ref": "type.json#/definitions/DATA32",
            "description": "hash of the parent block."
        },
        "nonce": {
            "$ref": "type.json#/definitions/DATA32",
            "description": "nonce of the generated proof-of-work. null when it is pending block."
        },
        "logsBloom": {
            "$ref": "type.json#/definitions/DATA256",
            "description": "the bloom filter for the logs of the block. null when it is pending block."
        },
        "transactionsRoot": {
            "$ref": "type.json#/definitions/DATA32",
            "description": "the root of the transaction trie of the block."
        },
        "stateRoot": {
            "$ref": "type.json#/definitions/DATA32",
            "description": "the root of the final state trie of the block."
        },
        "receiptsRoot": {
            "$ref": "type.json#/definitions/DATA32",
            "description": "the root of the receipts trie of the block."
        },
        "miner": {
            "$ref": "type.json#/definitions/DATA32",
            "description": "the address of the beneficiary to whom the mining rewards were given."
        },
        "difficulty": {
            "$ref": "type.json#/definitions/QUANTITY",
            "description": "integer of the difficulty for this block."
        },
        "totalDifficulty": {
            "$ref": "type.json#/definitions/QUANTITY",
            "description": "integer of the total difficulty of the chain until this block."
        },
        "extraData": {
            "$ref": "type.json#/definitions/DATA",
            "description": "the \"extra data\" field of this block."
        },
        "size": {
            "$ref": "type.json#/definitions/QUANTITY",
            "description": "integer the size of this block in bytes."
        },
        "nrgLimit": {
            "$ref": "type.json#/definitions/QUANTITY",
            "description": "the maximum energy allowed in this block in nAmps."
        },
        "nrgUsed": {
            "$ref": "type.json#/definitions/QUANTITY",
            "description": "the total used energy by all transactions in this block in nAmps."
        },
        "gasLimit": {
            "$ref": "type.json#/definitions/QUANTITY",
            "description": "same as nrgLimit; duplicated for Ethereum-compatibility purposes."
        },
        "gasUsed": {
            "$ref": "type.json#/definitions/QUANTITY",
            "description": "same as nrgUsed; duplicated for Ethereum-compatibility purposes."
        },
        "timestamp": {
            "$ref": "type.json#/definitions/QUANTITY",
            "description": "the unix timestamp for when the block was collated, in seconds."
        },
        "transactions": {
            "type": "array",
            "description": "Array of transaction objects, or 32 Bytes transaction hashes depending on the last given parameter."
        },
        "solution": {
            "$ref": "type.json#/definitions/DATA",
            "description": "solution for the generated proof-of-work."
        }
    }
}

